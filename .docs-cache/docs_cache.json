{
  "hash": "",
  "deps": {
    "bitflags": {
      "all.html": "bitflags2.9.1\n----------\n### Crate Items ###\n* Macros\n* Structs\n* Traits\n* Functions\nList of all items\n==========\n### Structs ###\n* Flag\n* iter::Iter\n* iter::IterNames\n* parser::ParseError\n### Traits ###\n* Bits\n* Flags\n* parser::ParseHex\n* parser::WriteHex\n### Macros ###\n* bitflags\n* bitflags_match\n### Functions ###\n* parser::from_str\n* parser::from_str_strict\n* parser::from_str_truncate\n* parser::to_writer\n* parser::to_writer_strict\n* parser::to_writer_truncate"
    },
    "heapless": {
      "all.html": "heapless0.8.0\n----------\n### Crate Items ###\n* Structs\n* Enums\n* Traits\n* Type Aliases\nList of all items\n==========\n### Structs ###\n* Deque\n* HistoryBuffer\n* IndexMap\n* IndexMapIter\n* IndexMapIterMut\n* IndexMapKeys\n* IndexMapValues\n* IndexMapValuesMut\n* IndexSet\n* IndexSetIter\n* LinearMap\n* OccupiedEntry\n* OldestOrdered\n* String\n* VacantEntry\n* Vec\n* binary_heap::BinaryHeap\n* binary_heap::PeekMut\n* mpmc::MpMcQueue\n* sorted_linked_list::FindMut\n* sorted_linked_list::Iter\n* sorted_linked_list::LinkedIndexU16\n* sorted_linked_list::LinkedIndexU8\n* sorted_linked_list::LinkedIndexUsize\n* sorted_linked_list::Max\n* sorted_linked_list::Min\n* sorted_linked_list::Node\n* sorted_linked_list::SortedLinkedList\n* spsc::Consumer\n* spsc::Iter\n* spsc::IterMut\n* spsc::Producer\n* spsc::Queue\n### Enums ###\n* Entry\n* binary_heap::Max\n* binary_heap::Min\n### Traits ###\n* binary_heap::Kind\n* sorted_linked_list::Kind\n* sorted_linked_list::SortedLinkedListIndex\n### Type Aliases ###\n* FnvIndexMap\n* FnvIndexSet\n* mpmc::Q16\n* mpmc::Q2\n* mpmc::Q32\n* mpmc::Q4\n* mpmc::Q64\n* mpmc::Q8"
    },
    "bumpalo": {
      "all.html": "bumpalo3.19.0\n----------\n### Crate Items ###\n* Macros\n* Structs\n* Enums\n* Traits\nList of all items\n==========\n### Structs ###\n* AllocErr\n* Bump\n* ChunkIter\n* ChunkRawIter\n* collections::string::Drain\n* collections::string::FromUtf16Error\n* collections::string::FromUtf8Error\n* collections::string::String\n* collections::vec::Drain\n* collections::vec::DrainFilter\n* collections::vec::IntoIter\n* collections::vec::Splice\n* collections::vec::Vec\n### Enums ###\n* AllocOrInitError\n* collections::CollectionAllocErr\n### Traits ###\n* collections::CollectIn\n* collections::FromIteratorIn\n### Macros ###\n* format\n* vec"
    },
    "serde": {
      "all.html": "serde1.0.219\n----------\n### Crate Items ###\n* Macros\n* Structs\n* Enums\n* Traits\n* Derive Macros\nList of all items\n==========\n### Structs ###\n* de::IgnoredAny\n* de::value::BoolDeserializer\n* de::value::BorrowedBytesDeserializer\n* de::value::BorrowedStrDeserializer\n* de::value::BytesDeserializer\n* de::value::CharDeserializer\n* de::value::EnumAccessDeserializer\n* de::value::Error\n* de::value::F32Deserializer\n* de::value::F64Deserializer\n* de::value::I128Deserializer\n* de::value::I16Deserializer\n* de::value::I32Deserializer\n* de::value::I64Deserializer\n* de::value::I8Deserializer\n* de::value::IsizeDeserializer\n* de::value::MapAccessDeserializer\n* de::value::MapDeserializer\n* de::value::SeqAccessDeserializer\n* de::value::SeqDeserializer\n* de::value::StrDeserializer\n* de::value::U128Deserializer\n* de::value::U16Deserializer\n* de::value::U32Deserializer\n* de::value::U64Deserializer\n* de::value::U8Deserializer\n* de::value::UnitDeserializer\n* de::value::UsizeDeserializer\n* ser::Impossible\n### Enums ###\n* de::Unexpected\n### Traits ###\n* Deserialize\n* Deserializer\n* Serialize\n* Serializer\n* de::Deserialize\n* de::DeserializeOwned\n* de::DeserializeSeed\n* de::Deserializer\n* de::EnumAccess\n* de::Error\n* de::Expected\n* de::IntoDeserializer\n* de::MapAccess\n* de::SeqAccess\n* de::VariantAccess\n* de::Visitor\n* ser::Error\n* ser::Serialize\n* ser::SerializeMap\n* ser::SerializeSeq\n* ser::SerializeStruct\n* ser::SerializeStructVariant\n* ser::SerializeTuple\n* ser::SerializeTupleStruct\n* ser::SerializeTupleVariant\n* ser::Serializer\n### Macros ###\n* forward_to_deserialize_any\n### Derive Macros ###\n* Deserialize\n* Serialize"
    },
    "hash32": {
      "all.html": "hash320.3.1\n----------\n### Crate Items ###\n* Structs\n* Traits\nList of all items\n==========\n### Structs ###\n* BuildHasherDefault\n* FnvHasher\n* Murmur3Hasher\n### Traits ###\n* Hasher"
    },
    "libm": {
      "fn fmodf": "libm0.2.15\n----------\nlibm\nFunction fmodfCopy item path\n==========\nSource\n```\npub fn fmodf(x: f32, y: f32) -> f32\n```\nExpand description\nCalculate the remainder of `x / y`, the precise result of `x - trunc(x / y) * y`."
    }
  },
  "crate_versions": {
    "hash32": "0.2.1",
    "serde": "1.0",
    "heapless": "0.8.0",
    "bumpalo": "3.16",
    "libm": "0.2",
    "bitflags": "2.9.0"
  }
}